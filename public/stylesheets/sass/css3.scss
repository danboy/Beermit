$useIEFilters: 0; // might be 0 or 1. disabled by default.

@mixin border-radius ($topleft, $topright:"", $bottomleft:"", $bottomright:"") {
  -moz-border-radius: $topleft;
  -webkit-border-radius: $topleft;
  border-radius: $topleft;
  @if $topright != ""{
    -moz-border-radius-topright: $topright;
    -webkit-border-top-right-radius: $topright;
    -border-top-right-radius: $topright;
  }
  @if $bottomleft != ""{
    -moz-border-radius-bottomleft: $bottomleft;
    -webkit-border-bottom-left-radius: $bottomleft;
    -border-bottom-left-radius: $bottomleft;
  }
  @if $bottomright != ""{
    -moz-border-radius-bottomright: $bottomright;
    -webkit-border-bottom-right-radius: $bottomright;
    -border-bottom-right-radius: $bottomright;
  }
}

@mixin box-shadow ($value, $hex, $ie: $useIEFilters) {
  -moz-box-shadow: $values $hex;
  -o-box-shadow: $values $hex;
  -webkit-box-shadow: $values $hex;
  box-shadow: $values $hex;
            
  @if $ie == 1 {
    filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=0px, OffY=0px, Color='#ffffff');
    -ms-filter: "progid:DXImageTransform.Microsoft.dropshadow(OffX=0px, OffY=0px, Color='#ffffff')";
  }
}

@mixin linear-gradient($from, $to, $ie: $useIEFilters) {
    background-color: $to;
      background-image: -moz-linear-gradient(top, $from, $to);
        background-image: -webkit-gradient(linear,left top,left bottom,color-stop(0, $from),color-stop(1, $to));
          
          @if $ie == 1 { 
                filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
                            -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}')";
                              }
}

@mixin rgba($hex, $alpha, $ie: $useIEFilters) {
    @if $alpha > 1 {
          $alpha: $alpha/100;
            }
      
      background-color: $hex;
        background-color: rgba(red($hex), green($hex), blue($hex), $alpha);
          
          @if $ie == 1 { 
                $hexopac: ceil((($alpha * 255)/16) *10);
                    
                    filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='##{$hexopac}#{$hex}',EndColorStr='##{$hexopac}##{$hex}');
                                -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='##{$hexopac}##{$hex}',EndColorStr='##{$hexopac}##{$hex}')";
                                  }
}

@mixin rotate ($deg, $ie: $useIEFilters) {
    -moz-transform: rotate(#{$deg}deg);
      -o-transform: rotate(#{$deg}deg);
        -webkit-transform: rotate(#{$deg}deg);
          @if $ie == 1 {
                filter: progid:DXImageTransform.Microsoft.Matrix(sizingMethod='auto expand', M11=0.99144486137381, M12=--0.130526192220052, M21=0.130526192220052, M22=0.99144486137381);
                            -ms-filter: "progid:DXImageTransform.Microsoft.Matrix(SizingMethod='auto expand', M11=0.99144486137381, M12=--0.130526192220052, M21=0.130526192220052, M22=0.99144486137381)";
                                zoom: 1;
                                        }
}

@mixin transition ($props, $duration, $effect) {
    -moz-transition: $props $duration $effect;
      -o-transition: $props $duration $effect;
        -webkit-transition: $props $duration $effect;
          transition: $props $duration $effect;
}
